knitr::opts_chunk$set(echo = TRUE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
Sys.setlocale("LC_TIME", "English")
setwd("C:/Users/candi/Desktop/ETUDES/EPFL1A/semestre 2/applied statistics/applied_stat_359523/project_3")
#data bases import
df18 <- read.csv(file = '2018-19.csv')
df19 <- read.csv(file = '2019-20.csv')
df20 <- read.csv(file = '2020-21.csv')
df21 <- read.csv(file = '2021-22.csv')
set.seed(435) #set the seed for reproducible results
#variables names
#ls(df18)
#ls(df19)
#ls(df20)
#ls(df21)
#data sets df19, df20 and df21 have the same variables but not df18 (only 62 variables) which explains why there are lots of NA
df <- bind_rows(df18, df19, df20, df21)
#sum(is.na(df)/((106-62)*380*2+ (106-62)*260))
#date
df <- df%>%mutate(
Date = as.Date(Date , format = "%d/%m/%Y")
)
#restrict the number of variables
df_restr <- df %>% select(Date, HomeTeam, AwayTeam, FTR, FTHG, FTAG)
#pivot longer to create two rows for each match
df_restr <- df_restr %>% pivot_longer(cols = c(HomeTeam, AwayTeam), names_to = 'Team')
#variable win
df_restr <- df_restr%>% mutate(
win = as.factor(case_when(
Team == 'HomeTeam' & FTR == 'H' ~ 1,
Team == 'AwayTeam' & FTR == 'H' ~ 0,
Team == 'HomeTeam' & FTR == 'A' ~ 0,
Team == 'AwayTeam' & FTR == 'A' ~ 1,
Team == 'HomeTeam' & FTR == 'D' ~ 2,
Team == 'AwayTeam' & FTR == 'D' ~ 2,
)
))
#score variable
df_restr <- df_restr %>% mutate(
goals = case_when(
Team == 'HomeTeam' ~ FTHG,
Team == 'AwayTeam' ~ FTAG
)
)
#variable to assess if covid or not
df_restr <- df_restr %>% mutate(
covid = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ 1,
TRUE ~ 0
))
)
df_restr <- df_restr %>% mutate(
covid_before_after = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ "In_covid",
Date <= "2020-03-12" ~"Pre-covid",
TRUE ~ "Post-covid"
))
)
#rename variables
df_restr <- df_restr %>% mutate(
home_goals = FTHG,
away_goals = FTAG,
team_name = value,
team_status = Team,
covid_y_n = covid,
date = Date
)
#final data set
df_restr <- df_restr %>% select(date, home_goals, away_goals, team_name, team_status, covid_y_n, covid_before_after, win, goals )
#if we consider that the home advantage can be computed with the number of goals
#before covid, we can do a linear model
df_before <- df_restr %>% filter(covid_before_after == 'Pre-covid')
#model before covid
linear_model_before <- lm(goals ~ team_status, data = df_before )
summary(linear_model_before)
#during covid
df_during <- df_restr %>% filter(covid_before_after == 'In_covid')
linear_model_during <- lm(goals ~ team_status , data = df_during)
summary(linear_model_during)
#after covid
df_after <- df_restr %>% filter(covid_before_after == 'Post-covid')
linear_model_after <- lm(goals ~ team_status , data = df_after)
summary(linear_model_after)
#compare before and after covid
linear_model_b_a <- lm(goals ~ team_status + covid_before_after, data = df_restr)
summary(linear_model_b_a)
#if we consider that the advantage is the win, we will make a variable that counts the number of wins for each team and then do the glm according to if they were at home or away
df_wins_all <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins <- glm(df_wins_all$number ~ df_wins_all$team_status, family=poisson(link="log"))
summary(model_wins)
model_wins_before <- glm(df_wins_before$number ~ df_wins_before$team_status, family=poisson(link="log"))
summary(model_wins_before)
model_wins_during <- glm(df_wins_during$number ~ df_wins_during$team_status, family=poisson(link="log"))
#relegated/promoted effect
unique(df18$HomeTeam)
unique(df19$HomeTeam)
A = setdiff(df18$HomeTeam,df19$HomeTeam) #relegated (those in for 18 but not in 19)
B = setdiff(df19$HomeTeam,df18$HomeTeam) #promoted (those in 19 but not in 18)
C = setdiff(df19$HomeTeam, df20$HomeTeam) #relegated
D = setdiff(df20$HomeTeam, df19$HomeTeam) #promoted
names_del <- unique(c(A, B, C, D))
df_wins_all_rel <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% filter(!(team_name%in%names_del))%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before_rel <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during_rel <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after_rel <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins_before_rel <- glm(df_wins_before_rel$number ~ df_wins_before_rel$team_status, family=poisson(link="log"))
summary(model_wins_before_rel)
model_wins_during_rel <- glm(df_wins_during_rel$number ~ df_wins_during_rel$team_status, family=poisson(link="log"))
knitr::opts_chunk$set(echo = TRUE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
Sys.setlocale("LC_TIME", "English")
setwd("C:/Users/candi/Desktop/ETUDES/EPFL1A/semestre 2/applied statistics/applied_stat_359523/project_3")
#data bases import
df18 <- read.csv(file = '2018-19.csv')
df19 <- read.csv(file = '2019-20.csv')
df20 <- read.csv(file = '2020-21.csv')
df21 <- read.csv(file = '2021-22.csv')
set.seed(435) #set the seed for reproducible results
#variables names
#ls(df18)
#ls(df19)
#ls(df20)
#ls(df21)
#data sets df19, df20 and df21 have the same variables but not df18 (only 62 variables) which explains why there are lots of NA
df <- bind_rows(df18, df19, df20, df21)
#sum(is.na(df)/((106-62)*380*2+ (106-62)*260))
#date
df <- df%>%mutate(
Date = as.Date(Date , format = "%d/%m/%Y")
)
#restrict the number of variables
df_restr <- df %>% select(Date, HomeTeam, AwayTeam, FTR, FTHG, FTAG)
#pivot longer to create two rows for each match
df_restr <- df_restr %>% pivot_longer(cols = c(HomeTeam, AwayTeam), names_to = 'Team')
#variable win
df_restr <- df_restr%>% mutate(
win = as.factor(case_when(
Team == 'HomeTeam' & FTR == 'H' ~ 1,
Team == 'AwayTeam' & FTR == 'H' ~ 0,
Team == 'HomeTeam' & FTR == 'A' ~ 0,
Team == 'AwayTeam' & FTR == 'A' ~ 1,
Team == 'HomeTeam' & FTR == 'D' ~ 2,
Team == 'AwayTeam' & FTR == 'D' ~ 2,
)
))
#score variable
df_restr <- df_restr %>% mutate(
goals = case_when(
Team == 'HomeTeam' ~ FTHG,
Team == 'AwayTeam' ~ FTAG
)
)
#variable to assess if covid or not
df_restr <- df_restr %>% mutate(
covid = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ 1,
TRUE ~ 0
))
)
df_restr <- df_restr %>% mutate(
covid_before_after = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ "In-covid",
Date <= "2020-03-12" ~"Pre-covid",
TRUE ~ "Post-covid"
))
)
#rename variables
df_restr <- df_restr %>% mutate(
home_goals = FTHG,
away_goals = FTAG,
team_name = value,
team_status = Team,
covid_y_n = covid,
date = Date
)
#final data set
df_restr <- df_restr %>% select(date, home_goals, away_goals, team_name, team_status, covid_y_n, covid_before_after, win, goals )
#if we consider that the home advantage can be computed with the number of goals
#before covid, we can do a linear model
df_before <- df_restr %>% filter(covid_before_after == 'Pre-covid')
#model before covid
linear_model_before <- lm(goals ~ team_status, data = df_before )
summary(linear_model_before)
#during covid
df_during <- df_restr %>% filter(covid_before_after == 'In_covid')
linear_model_during <- lm(goals ~ team_status , data = df_during)
#relegated/promoted effect
unique(df18$HomeTeam)
unique(df19$HomeTeam)
A = setdiff(df18$HomeTeam,df19$HomeTeam) #relegated (those in for 18 but not in 19)
B = setdiff(df19$HomeTeam,df18$HomeTeam) #promoted (those in 19 but not in 18)
C = setdiff(df19$HomeTeam, df20$HomeTeam) #relegated
D = setdiff(df20$HomeTeam, df19$HomeTeam) #promoted
names_del <- unique(c(A, B, C, D))
df_wins_all_rel <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% filter(!(team_name%in%names_del))%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before_rel <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during_rel <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after_rel <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins_before_rel <- glm(df_wins_before_rel$number ~ df_wins_before_rel$team_status, family=poisson(link="log"))
summary(model_wins_before_rel)
model_wins_during_rel <- glm(df_wins_during_rel$number ~ df_wins_during_rel$team_status, family=poisson(link="log"))
summary(model_wins_during_rel)
model_wins_after_rel <- glm(df_wins_after_rel$number ~ df_wins_after_rel$team_status, family=poisson(link="log"))
summary(model_wins_after_rel)
#including a draw effect
#if we consider that draw is almost like winning
df_wins_all_bis <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win != "0") %>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before_bis <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during_bis <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after_bis <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins_bis <- glm(df_wins_all_bis$number ~ df_wins_all_bis$team_status, family=poisson(link="log"))
summary(model_wins_bis)
model_wins_before_bis <- glm(df_wins_before_bis$number ~ df_wins_before_bis$team_status, family=poisson(link="log"))
summary(model_wins_before_bis)
model_wins_during_bis <- glm(df_wins_during_bis$number ~ df_wins_during_bis$team_status, family=poisson(link="log"))
summary(model_wins_during_bis)
model_wins_after_bis <- glm(df_wins_after_bis$number ~ df_wins_after_bis$team_status, family=poisson(link="log"))
summary(model_wins_after_bis)
#if we consider that the home advantage can be computed with the number of goals
#before covid, we can do a linear model
df_before <- df_restr %>% filter(covid_before_after == 'Pre-covid')
#model before covid
linear_model_before <- lm(goals ~ team_status, data = df_before )
summary(linear_model_before)
#during covid
df_during <- df_restr %>% filter(covid_before_after == 'In-covid')
linear_model_during <- lm(goals ~ team_status , data = df_during)
summary(linear_model_during)
#after covid
df_after <- df_restr %>% filter(covid_before_after == 'Post-covid')
linear_model_after <- lm(goals ~ team_status , data = df_after)
summary(linear_model_after)
#compare before and after covid
linear_model_b_a <- lm(goals ~ team_status + covid_before_after, data = df_restr)
summary(linear_model_b_a)
#if we consider that the advantage is the win, we will make a variable that counts the number of wins for each team and then do the glm according to if they were at home or away
df_wins_all <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins <- glm(df_wins_all$number ~ df_wins_all$team_status, family=poisson(link="log"))
summary(model_wins)
model_wins_before <- glm(df_wins_before$number ~ df_wins_before$team_status, family=poisson(link="log"))
summary(model_wins_before)
model_wins_during <- glm(df_wins_during$number ~ df_wins_during$team_status, family=poisson(link="log"))
summary(model_wins_during)
model_wins_after <- glm(df_wins_after$number ~ df_wins_after$team_status, family=poisson(link="log"))
summary(model_wins_after)
df_with_covid <- df_restr %>% select(covid_before_after, team_name, team_status, win)%>% filter(win == "1") %>% group_by(covid_before_after, team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_covid_var <- glm(df_with_covid$number ~ df_with_covid$team_status + df_with_covid$covid_before_after, family=poisson(link="log"))
summary(model_covid_var)
knitr::opts_chunk$set(echo = TRUE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
Sys.setlocale("LC_TIME", "English")
setwd("C:/Users/candi/Desktop/ETUDES/EPFL1A/semestre 2/applied statistics/applied_stat_359523/project_3")
#data bases import
df18 <- read.csv(file = '2018-19.csv')
df19 <- read.csv(file = '2019-20.csv')
df20 <- read.csv(file = '2020-21.csv')
df21 <- read.csv(file = '2021-22.csv')
set.seed(435) #set the seed for reproducible results
#variables names
#ls(df18)
#ls(df19)
#ls(df20)
#ls(df21)
#data sets df19, df20 and df21 have the same variables but not df18 (only 62 variables) which explains why there are lots of NA
df <- bind_rows(df18, df19, df20, df21)
#sum(is.na(df)/((106-62)*380*2+ (106-62)*260))
#date
df <- df%>%mutate(
Date = as.Date(Date , format = "%d/%m/%Y")
)
#restrict the number of variables
df_restr <- df %>% select(Date, HomeTeam, AwayTeam, FTR, FTHG, FTAG)
#pivot longer to create two rows for each match
df_restr <- df_restr %>% pivot_longer(cols = c(HomeTeam, AwayTeam), names_to = 'Team')
#variable win
df_restr <- df_restr%>% mutate(
win = as.factor(case_when(
Team == 'HomeTeam' & FTR == 'H' ~ 1,
Team == 'AwayTeam' & FTR == 'H' ~ 0,
Team == 'HomeTeam' & FTR == 'A' ~ 0,
Team == 'AwayTeam' & FTR == 'A' ~ 1,
Team == 'HomeTeam' & FTR == 'D' ~ 2,
Team == 'AwayTeam' & FTR == 'D' ~ 2,
)
))
#score variable
df_restr <- df_restr %>% mutate(
goals = case_when(
Team == 'HomeTeam' ~ FTHG,
Team == 'AwayTeam' ~ FTAG
)
)
#variable to assess if covid or not
df_restr <- df_restr %>% mutate(
covid = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ 1,
TRUE ~ 0
))
)
df_restr <- df_restr %>% mutate(
covid_before_after = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ "In-covid",
Date <= "2020-03-12" ~"Pre-covid",
TRUE ~ "Post-covid"
))
)
#rename variables
df_restr <- df_restr %>% mutate(
home_goals = FTHG,
away_goals = FTAG,
team_name = value,
team_status = Team,
covid_y_n = covid,
date = Date
)
#final data set
df_restr <- df_restr %>% select(date, home_goals, away_goals, team_name, team_status, covid_y_n, covid_before_after, win, goals )
#if we consider that the home advantage can be computed with the number of goals
#before covid, we can do a linear model
df_before <- df_restr %>% filter(covid_before_after == 'Pre-covid')
#model before covid
linear_model_before <- lm(goals ~ team_status, data = df_before )
summary(linear_model_before)
#during covid
df_during <- df_restr %>% filter(covid_before_after == 'In-covid')
linear_model_during <- lm(goals ~ team_status , data = df_during)
summary(linear_model_during)
#after covid
df_after <- df_restr %>% filter(covid_before_after == 'Post-covid')
linear_model_after <- lm(goals ~ team_status , data = df_after)
summary(linear_model_after)
#compare before and after covid
linear_model_b_a <- lm(goals ~ team_status + covid_before_after, data = df_restr)
summary(linear_model_b_a)
#if we consider that the advantage is the win, we will make a variable that counts the number of wins for each team and then do the glm according to if they were at home or away
df_wins_all <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins <- glm(df_wins_all$number ~ df_wins_all$team_status, family=poisson(link="log"))
summary(model_wins)
model_wins_before <- glm(df_wins_before$number ~ df_wins_before$team_status, family=poisson(link="log"))
summary(model_wins_before)
model_wins_during <- glm(df_wins_during$number ~ df_wins_during$team_status, family=poisson(link="log"))
summary(model_wins_during)
model_wins_after <- glm(df_wins_after$number ~ df_wins_after$team_status, family=poisson(link="log"))
summary(model_wins_after)
df_with_covid <- df_restr %>% select(covid_before_after, team_name, team_status, win)%>% filter(win == "1") %>% group_by(covid_before_after, team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_covid_var <- glm(df_with_covid$number ~ df_with_covid$team_status + df_with_covid$covid_before_after, family=poisson(link="log"))
summary(model_covid_var)
hist(df_restr$home_goals, freq = F)
plot(df_restr$date,df_restr$home_goals)
test <- df_restr %>% select(date, home_goals, away_goals) %>% mutate(
year = year(date),
month = month(date)) %>% group_by(year, month) %>% summarise(avg_home = mean(home_goals), avg_away = mean(away_goals))
test_2<- df_restr %>% select(date, home_goals, away_goals) %>% group_by(date) %>% summarise(avg_home = mean(home_goals), avg_away = mean(away_goals)) %>% mutate(avg_diff = avg_home - avg_away)
test_2%>% ggplot(aes(x=date, y=avg_diff)) +geom_line() + geom_hline(yintercept= mean(test_2$avg_diff), col = 'red')+ geom_rect(aes(xmin = as.Date("2020-03-12", format = "%Y-%m-%d"), xmax = as.Date("2021-06-01", format = "%Y-%m-%d"), ymin = -Inf, ymax = Inf), fill = "blue", alpha = 0.003) + labs(x = 'Date', y = 'Average difference of goals', title = 'Difference between home goals and away goals')
par(mfrow=c(2,2))
plot(model_wins_before)
confint(linear_model_after)
#relegated/promoted effect
unique(df18$HomeTeam)
unique(df19$HomeTeam)
A = setdiff(df18$HomeTeam,df19$HomeTeam) #relegated (those in for 18 but not in 19)
B = setdiff(df19$HomeTeam,df18$HomeTeam) #promoted (those in 19 but not in 18)
C = setdiff(df19$HomeTeam, df20$HomeTeam) #relegated
D = setdiff(df20$HomeTeam, df19$HomeTeam) #promoted
names_del <- unique(c(A, B, C, D))
df_wins_all_rel <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win == "1") %>% filter(!(team_name%in%names_del))%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before_rel <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during_rel <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after_rel <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win == "1")%>% filter(!(team_name%in%names_del))%>%select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins_before_rel <- glm(df_wins_before_rel$number ~ df_wins_before_rel$team_status, family=poisson(link="log"))
summary(model_wins_before_rel)
model_wins_during_rel <- glm(df_wins_during_rel$number ~ df_wins_during_rel$team_status, family=poisson(link="log"))
summary(model_wins_during_rel)
model_wins_after_rel <- glm(df_wins_after_rel$number ~ df_wins_after_rel$team_status, family=poisson(link="log"))
summary(model_wins_after_rel)
#including a draw effect
#if we consider that draw is almost like winning
df_wins_all_bis <- as.data.frame(df_restr %>% select(team_name, team_status, win)%>% filter(win != "0") %>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_before_bis <- as.data.frame(df_restr %>% filter(covid_before_after =='Pre-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number))
df_wins_during_bis <- df_restr %>% filter(covid_before_after =='In-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_wins_after_bis <- df_restr %>% filter(covid_before_after =='Post-covid')%>%  filter(win != "0")%>% select(team_name, team_status, win)%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_wins_bis <- glm(df_wins_all_bis$number ~ df_wins_all_bis$team_status, family=poisson(link="log"))
summary(model_wins_bis)
model_wins_before_bis <- glm(df_wins_before_bis$number ~ df_wins_before_bis$team_status, family=poisson(link="log"))
summary(model_wins_before_bis)
model_wins_during_bis <- glm(df_wins_during_bis$number ~ df_wins_during_bis$team_status, family=poisson(link="log"))
summary(model_wins_during_bis)
model_wins_after_bis <- glm(df_wins_after_bis$number ~ df_wins_after_bis$team_status, family=poisson(link="log"))
summary(model_wins_after_bis)
df_restr
View(df_restr)
df19
df_restr_19 <- df %>% select(Date, HomeTeam, AwayTeam, FTR, FTHG, FTAG)
#pivot longer to create two rows for each match
df_restr_19 <- df_restr_19 %>% pivot_longer(cols = c(HomeTeam, AwayTeam), names_to = 'Team')
#variable win
df_restr_19 <- df_restr_19 %>% mutate(
win = as.factor(case_when(
Team == 'HomeTeam' & FTR == 'H' ~ 1,
Team == 'AwayTeam' & FTR == 'H' ~ 0,
Team == 'HomeTeam' & FTR == 'A' ~ 0,
Team == 'AwayTeam' & FTR == 'A' ~ 1,
Team == 'HomeTeam' & FTR == 'D' ~ 2,
Team == 'AwayTeam' & FTR == 'D' ~ 2,
)
))
#score variable
df_restr_19 <- df_restr_19 %>% mutate(
goals = case_when(
Team == 'HomeTeam' ~ FTHG,
Team == 'AwayTeam' ~ FTAG
)
)
#variable to assess if covid or not
df_restr_19 <- df_restr_19 %>% mutate(
covid = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ 1,
TRUE ~ 0
))
)
df_restr_19 <- df_restr_19 %>% mutate(
covid_before_after = as.factor(case_when(
Date >= "2020-03-12" & Date <= "2021-06-01"~ "In-covid",
Date <= "2020-03-12" ~"Pre-covid",
TRUE ~ "Post-covid"
))
)
#rename variables
df_restr_19 <- df_restr_19 %>% mutate(
home_goals = FTHG,
away_goals = FTAG,
team_name = value,
team_status = Team,
covid_y_n = covid,
date = Date
)
#final data set
df_restr_19 <- df_restr_19 %>% select(date, home_goals, away_goals, team_name, team_status, covid_y_n, covid_before_after, win, goals )
View(df_restr_19)
df_restr_19%>%select(team_name, team_status, win) %>% filter(win == "1")%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
df_restr_19 <- df_restr_19%>%select(team_name, team_status, win) %>% filter(win == "1")%>% group_by(team_name, team_status)%>%summarise(number=n())%>% mutate(numb_win = number)
model_19 <- glm(df_restr_19$number ~ df_restr_19$team_status, family=poisson(link="log"))
summary(model_19)
plot(model_19)
par(mfrow=c(2,2))
plot(model_19)
plot(model_19$residuals)
plot(model_19$residuals, model_19$fitted.values)
plot(model_19$residuals, model_19$fitted.values, xlim=0)
plot(model_19$residuals, model_19$fitted.values, ylim=c(0,30))
plot(model_19)
rootogram(model_19)
Anova(model_19, test ='Chisq')
anova(model_19, test ='Chisq')
influencePlot(model_19)
library(vcd)
influencePlot(model_19)
library(car)
influencePlot(model_19)
library(AER)
install.packages("AER")
library(AER)
deviance(model_19)/model_19$df.residual
dispersiontest(model_19)
res <- residuals(model_19, type="deviance")
plot(log(predict(model_19)), res)
abline(h=0, lty=2)
qqnorm(res)
qqline(res)
performance::check_model(model_19)
par(mfrow=c(2,2))
plot(model_wins)
## b. All seasons together
par(mfrow=c(2,2))
plot(model_wins)
